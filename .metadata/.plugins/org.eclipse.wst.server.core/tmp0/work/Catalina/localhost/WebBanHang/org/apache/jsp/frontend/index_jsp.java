/*
 * Generated by the Jasper component of Apache Tomcat
 * Version: Apache Tomcat/8.0.33
 * Generated at: 2017-04-26 11:58:33 UTC
 * Note: The last modified time of this file was set to
 *       the last modified time of the source file after
 *       generation to assist with modification tracking.
 */
package org.apache.jsp.frontend;

import javax.servlet.*;
import javax.servlet.http.*;
import javax.servlet.jsp.*;

public final class index_jsp extends org.apache.jasper.runtime.HttpJspBase
    implements org.apache.jasper.runtime.JspSourceDependent,
                 org.apache.jasper.runtime.JspSourceImports {

  private static final javax.servlet.jsp.JspFactory _jspxFactory =
          javax.servlet.jsp.JspFactory.getDefaultFactory();

  private static java.util.Map<java.lang.String,java.lang.Long> _jspx_dependants;

  private static final java.util.Set<java.lang.String> _jspx_imports_packages;

  private static final java.util.Set<java.lang.String> _jspx_imports_classes;

  static {
    _jspx_imports_packages = new java.util.HashSet<>();
    _jspx_imports_packages.add("javax.servlet");
    _jspx_imports_packages.add("javax.servlet.http");
    _jspx_imports_packages.add("javax.servlet.jsp");
    _jspx_imports_classes = null;
  }

  private volatile javax.el.ExpressionFactory _el_expressionfactory;
  private volatile org.apache.tomcat.InstanceManager _jsp_instancemanager;

  public java.util.Map<java.lang.String,java.lang.Long> getDependants() {
    return _jspx_dependants;
  }

  public java.util.Set<java.lang.String> getPackageImports() {
    return _jspx_imports_packages;
  }

  public java.util.Set<java.lang.String> getClassImports() {
    return _jspx_imports_classes;
  }

  public javax.el.ExpressionFactory _jsp_getExpressionFactory() {
    if (_el_expressionfactory == null) {
      synchronized (this) {
        if (_el_expressionfactory == null) {
          _el_expressionfactory = _jspxFactory.getJspApplicationContext(getServletConfig().getServletContext()).getExpressionFactory();
        }
      }
    }
    return _el_expressionfactory;
  }

  public org.apache.tomcat.InstanceManager _jsp_getInstanceManager() {
    if (_jsp_instancemanager == null) {
      synchronized (this) {
        if (_jsp_instancemanager == null) {
          _jsp_instancemanager = org.apache.jasper.runtime.InstanceManagerFactory.getInstanceManager(getServletConfig());
        }
      }
    }
    return _jsp_instancemanager;
  }

  public void _jspInit() {
  }

  public void _jspDestroy() {
  }

  public void _jspService(final javax.servlet.http.HttpServletRequest request, final javax.servlet.http.HttpServletResponse response)
        throws java.io.IOException, javax.servlet.ServletException {

final java.lang.String _jspx_method = request.getMethod();
if (!"GET".equals(_jspx_method) && !"POST".equals(_jspx_method) && !"HEAD".equals(_jspx_method) && !javax.servlet.DispatcherType.ERROR.equals(request.getDispatcherType())) {
response.sendError(HttpServletResponse.SC_METHOD_NOT_ALLOWED, "JSPs only permit GET POST or HEAD");
return;
}

    final javax.servlet.jsp.PageContext pageContext;
    javax.servlet.http.HttpSession session = null;
    final javax.servlet.ServletContext application;
    final javax.servlet.ServletConfig config;
    javax.servlet.jsp.JspWriter out = null;
    final java.lang.Object page = this;
    javax.servlet.jsp.JspWriter _jspx_out = null;
    javax.servlet.jsp.PageContext _jspx_page_context = null;


    try {
      response.setContentType("text/html; charset=utf-8");
      pageContext = _jspxFactory.getPageContext(this, request, response,
      			null, true, 8192, true);
      _jspx_page_context = pageContext;
      application = pageContext.getServletContext();
      config = pageContext.getServletConfig();
      session = pageContext.getSession();
      out = pageContext.getOut();
      _jspx_out = out;

      out.write('\r');
      out.write('\n');
      org.apache.jasper.runtime.JspRuntimeLibrary.include(request, response, "header.jsp", out, true);
      out.write("\r\n");
      out.write("<div class=\"content\">\r\n");
      out.write("<div class=\"wrapper\">\r\n");
      out.write("\t<div class=\"sub-content\">\r\n");
      out.write("\t\t<div class=\"sidebar\">\r\n");
      out.write("\t\t\t<div class=\"sidebar-title\">Danh mục sản phẩm</div>\r\n");
      out.write("\t\t\t<ul>\r\n");
      out.write("\t\t\t\t<li><h3>\r\n");
      out.write("\t\t\t\t\t\t<a href=\"#\" title=\"\"><i class=\"fa fa-laptop\"\r\n");
      out.write("\t\t\t\t\t\t\taria-hidden=\"true\"></i>&nbsp&nbspLaptop,phụ kiện</a>\r\n");
      out.write("\t\t\t\t\t</h3></li>\r\n");
      out.write("\t\t\t\t<li><h3>\r\n");
      out.write("\t\t\t\t\t\t<a href=\"#\" title=\"\"><i class=\"fa fa-gamepad\"\r\n");
      out.write("\t\t\t\t\t\t\taria-hidden=\"true\"></i>&nbsp&nbspPC,Workstaion</a>\r\n");
      out.write("\t\t\t\t\t</h3></li>\r\n");
      out.write("\t\t\t\t<li><h3>\r\n");
      out.write("\t\t\t\t\t\t<a href=\"#\" title=\"\"><i class=\"fa fa-video-camera\"\r\n");
      out.write("\t\t\t\t\t\t\taria-hidden=\"true\"></i>&nbsp&nbspCamera giám sát</a>\r\n");
      out.write("\t\t\t\t\t</h3></li>\r\n");
      out.write("\t\t\t\t<li><h3>\r\n");
      out.write("\t\t\t\t\t\t<a href=\"#\" title=\"\"><i class=\"fa fa-desktop\"\r\n");
      out.write("\t\t\t\t\t\t\taria-hidden=\"true\"></i>&nbsp&nbspLinh kiện máy tính, PC</a>\r\n");
      out.write("\t\t\t\t\t</h3></li>\r\n");
      out.write("\t\t\t\t<li><h3>\r\n");
      out.write("\t\t\t\t\t\t<a href=\"#\" title=\"\"><i class=\"fa fa-usb\" aria-hidden=\"true\"></i>&nbsp&nbspThiết\r\n");
      out.write("\t\t\t\t\t\t\tbị lưu trữ</a>\r\n");
      out.write("\t\t\t\t\t</h3></li>\r\n");
      out.write("\t\t\t\t<li><h3>\r\n");
      out.write("\t\t\t\t\t\t<a href=\"#\" title=\"\"><i class=\"fa fa-volume-up\"\r\n");
      out.write("\t\t\t\t\t\t\taria-hidden=\"true\"></i>&nbsp&nbspThiết bị nghe nhìn</a>\r\n");
      out.write("\t\t\t\t\t</h3></li>\r\n");
      out.write("\t\t\t\t<li><h3>\r\n");
      out.write("\t\t\t\t\t\t<a href=\"#\" title=\"\"><i class=\"fa fa-briefcase\"\r\n");
      out.write("\t\t\t\t\t\t\taria-hidden=\"true\"></i>&nbsp&nbspSản phẩm thanh lý</a>\r\n");
      out.write("\t\t\t\t\t</h3></li>\r\n");
      out.write("\t\t\t</ul>\r\n");
      out.write("\t\t</div>\r\n");
      out.write("\t\t<!-- end sidebar-->\r\n");
      out.write("\t\t<div class=\"aside\">\r\n");
      out.write("\t\t\t<div class=\"tp-aside\">\r\n");
      out.write("\t\t\t\t<div class=\"form-area clearfix\">\r\n");
      out.write("\t\t\t\t\t<form action=\"\" method=\"\" name=\"frmSearch\" class=\"frmSearch\">\r\n");
      out.write("\t\t\t\t\t\t<select name=\"slcSearch\" class=\"slcSearch\">\r\n");
      out.write("\t\t\t\t\t\t\t<option value=\"0\">Tất cả</option>\r\n");
      out.write("\t\t\t\t\t\t\t<option value=\"1\">Laptop,phụ kiện</option>\r\n");
      out.write("\t\t\t\t\t\t\t<option value=\"2\">PC,Workstaion</option>\r\n");
      out.write("\t\t\t\t\t\t\t<option value=\"3\">Camera giám sát</option>\r\n");
      out.write("\t\t\t\t\t\t\t<option value=\"4\">Linh kiện máy tính, PC</option>\r\n");
      out.write("\t\t\t\t\t\t\t<option value=\"5\">Thiết bị lưu trữ</option>\r\n");
      out.write("\t\t\t\t\t\t\t<option value=\"6\">Thiết bị nghe nhìn</option>\r\n");
      out.write("\t\t\t\t\t\t\t<option value=\"7\">Sản phẩm thanh lý</option>\r\n");
      out.write("\t\t\t\t\t\t</select> <input type=\"search\" name=\"txtSearch\" class=\"txtSearch\" value=\"\"\r\n");
      out.write("\t\t\t\t\t\t\tplaceholder=\"Gõ từ khóa tìm kiếm...\">\r\n");
      out.write("\t\t\t\t\t\t<div class=\"btnSearch-area\">\r\n");
      out.write("\t\t\t\t\t\t\t<button type=\"submit\" name=\"btnSearch\" class=\"btnSearch\">\r\n");
      out.write("\t\t\t\t\t\t\t\t<i class=\"fa fa-search fa-lg\" aria-hidden=\"true\"></i>\r\n");
      out.write("\t\t\t\t\t\t\t</button>\r\n");
      out.write("\t\t\t\t\t\t</div>\r\n");
      out.write("\t\t\t\t\t</form>\r\n");
      out.write("\t\t\t\t</div>\r\n");
      out.write("\t\t\t\t<div class=\"nav\">\r\n");
      out.write("\t\t\t\t\t<a href=\"tel:19009068\" class=\"support-number\">Hỗ trợ trực\r\n");
      out.write("\t\t\t\t\t\ttuyến: 1900.9068</a> <a href=\"#\" class=\"news-tp-aside\">Tin tức</a> <a\r\n");
      out.write("\t\t\t\t\t\thref=\"#\" class=\"contact-tp-aside\">Liên hệ - hợp tác</a>\r\n");
      out.write("\t\t\t\t</div>\r\n");
      out.write("\t\t\t</div>\r\n");
      out.write("\t\t\t<!-- end tp-aside-->\r\n");
      out.write("\t\t\t<div class=\"bt-aside\">\r\n");
      out.write("\t\t\t\t<div class=\"l-bt-aside\">\r\n");
      out.write("\t\t\t\t\t<img src=\"");
      out.print(request.getContextPath());
      out.write("/frontend/pictures/tv.gif\">\r\n");
      out.write("\t\t\t\t</div>\r\n");
      out.write("\t\t\t\t<!-- end l-tp-aside-->\r\n");
      out.write("\t\t\t\t<div class=\"r-bt-aside\">\r\n");
      out.write("\t\t\t\t\t<div class=\"ads\">\r\n");
      out.write("\t\t\t\t\t\t<img\r\n");
      out.write("\t\t\t\t\t\t\tsrc=\"");
      out.print(request.getContextPath());
      out.write("/frontend/pictures/banner3.jpg\">\r\n");
      out.write("\t\t\t\t\t</div>\r\n");
      out.write("\t\t\t\t</div>\r\n");
      out.write("\t\t\t\t<!-- end r-tp-aside-->\r\n");
      out.write("\t\t\t</div>\r\n");
      out.write("\t\t\t<!-- end bt-aside-->\r\n");
      out.write("\t\t</div>\r\n");
      out.write("\t\t<!-- end aside-->\r\n");
      out.write("\t</div>\r\n");
      out.write("\t<!-- end sub-content-->\r\n");
      out.write("\t<div class=\"clr\"></div>\r\n");
      out.write("\t<div class=\"main-content\">\r\n");
      out.write("\t\t");
      org.apache.jasper.runtime.JspRuntimeLibrary.include(request, response, "content-index.jsp", out, true);
      out.write("\r\n");
      out.write("\t</div>\r\n");
      out.write("\t<!-- end main-content-->\r\n");
      out.write("</div>\r\n");
      org.apache.jasper.runtime.JspRuntimeLibrary.include(request, response, "footer.jsp", out, false);
    } catch (java.lang.Throwable t) {
      if (!(t instanceof javax.servlet.jsp.SkipPageException)){
        out = _jspx_out;
        if (out != null && out.getBufferSize() != 0)
          try {
            if (response.isCommitted()) {
              out.flush();
            } else {
              out.clearBuffer();
            }
          } catch (java.io.IOException e) {}
        if (_jspx_page_context != null) _jspx_page_context.handlePageException(t);
        else throw new ServletException(t);
      }
    } finally {
      _jspxFactory.releasePageContext(_jspx_page_context);
    }
  }
}
