/*
 * Generated by the Jasper component of Apache Tomcat
 * Version: Apache Tomcat/8.0.41
 * Generated at: 2017-05-07 00:23:41 UTC
 * Note: The last modified time of this file was set to
 *       the last modified time of the source file after
 *       generation to assist with modification tracking.
 */
package org.apache.jsp.frontend;

import javax.servlet.*;
import javax.servlet.http.*;
import javax.servlet.jsp.*;
import com.gui.product.category.CategoryControl;
import com.ads.user.UserModel;
import com.library.Utilities;
import com.*;
import com.object.*;
import com.gui.product.*;
import java.util.*;

public final class data_jsp extends org.apache.jasper.runtime.HttpJspBase
    implements org.apache.jasper.runtime.JspSourceDependent,
                 org.apache.jasper.runtime.JspSourceImports {

  private static final javax.servlet.jsp.JspFactory _jspxFactory =
          javax.servlet.jsp.JspFactory.getDefaultFactory();

  private static java.util.Map<java.lang.String,java.lang.Long> _jspx_dependants;

  private static final java.util.Set<java.lang.String> _jspx_imports_packages;

  private static final java.util.Set<java.lang.String> _jspx_imports_classes;

  static {
    _jspx_imports_packages = new java.util.HashSet<>();
    _jspx_imports_packages.add("com");
    _jspx_imports_packages.add("javax.servlet");
    _jspx_imports_packages.add("java.util");
    _jspx_imports_packages.add("javax.servlet.http");
    _jspx_imports_packages.add("com.gui.product");
    _jspx_imports_packages.add("javax.servlet.jsp");
    _jspx_imports_packages.add("com.object");
    _jspx_imports_classes = new java.util.HashSet<>();
    _jspx_imports_classes.add("com.library.Utilities");
    _jspx_imports_classes.add("com.gui.product.category.CategoryControl");
    _jspx_imports_classes.add("com.ads.user.UserModel");
  }

  private volatile javax.el.ExpressionFactory _el_expressionfactory;
  private volatile org.apache.tomcat.InstanceManager _jsp_instancemanager;

  public java.util.Map<java.lang.String,java.lang.Long> getDependants() {
    return _jspx_dependants;
  }

  public java.util.Set<java.lang.String> getPackageImports() {
    return _jspx_imports_packages;
  }

  public java.util.Set<java.lang.String> getClassImports() {
    return _jspx_imports_classes;
  }

  public javax.el.ExpressionFactory _jsp_getExpressionFactory() {
    if (_el_expressionfactory == null) {
      synchronized (this) {
        if (_el_expressionfactory == null) {
          _el_expressionfactory = _jspxFactory.getJspApplicationContext(getServletConfig().getServletContext()).getExpressionFactory();
        }
      }
    }
    return _el_expressionfactory;
  }

  public org.apache.tomcat.InstanceManager _jsp_getInstanceManager() {
    if (_jsp_instancemanager == null) {
      synchronized (this) {
        if (_jsp_instancemanager == null) {
          _jsp_instancemanager = org.apache.jasper.runtime.InstanceManagerFactory.getInstanceManager(getServletConfig());
        }
      }
    }
    return _jsp_instancemanager;
  }

  public void _jspInit() {
  }

  public void _jspDestroy() {
  }

  public void _jspService(final javax.servlet.http.HttpServletRequest request, final javax.servlet.http.HttpServletResponse response)
        throws java.io.IOException, javax.servlet.ServletException {

final java.lang.String _jspx_method = request.getMethod();
if (!"GET".equals(_jspx_method) && !"POST".equals(_jspx_method) && !"HEAD".equals(_jspx_method) && !javax.servlet.DispatcherType.ERROR.equals(request.getDispatcherType())) {
response.sendError(HttpServletResponse.SC_METHOD_NOT_ALLOWED, "JSPs only permit GET POST or HEAD");
return;
}

    final javax.servlet.jsp.PageContext pageContext;
    javax.servlet.http.HttpSession session = null;
    final javax.servlet.ServletContext application;
    final javax.servlet.ServletConfig config;
    javax.servlet.jsp.JspWriter out = null;
    final java.lang.Object page = this;
    javax.servlet.jsp.JspWriter _jspx_out = null;
    javax.servlet.jsp.PageContext _jspx_page_context = null;


    try {
      response.setContentType("text/html; charset=UTF-8");
      pageContext = _jspxFactory.getPageContext(this, request, response,
      			null, true, 8192, true);
      _jspx_page_context = pageContext;
      application = pageContext.getServletContext();
      config = pageContext.getServletConfig();
      session = pageContext.getSession();
      out = pageContext.getOut();
      _jspx_out = out;

      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");

	ConnectionPool cp = (ConnectionPool) application.getAttribute("cpool");
	ProductControl pc = new ProductControl(cp);
	int id = 0;
	if (cp == null) {
		application.setAttribute("cpool", pc.getConnectionPool());
	}
	pc.releaseConnection();
	CategoryControl cc = new CategoryControl(cp);
	if (cp == null) {
		application.setAttribute("cpool", cc.getConnectionPool());
	}
	cc.releaseConnection();
	if (request.getParameter("prid") != null && !request.getParameter("prid").equalsIgnoreCase("")) {
		session.setAttribute("product_id", request.getParameter("prid"));
		id = Integer.parseInt(request.getParameter("prid"));
		ProductObject po = pc.getProductObject(id);
		if (id > 0) {
			//hungcuong - sua lai services - chi goi vao services 1 lan 
			String warranty = "";
			int iwarranty = po.getProduct_warranty_time();
			if (iwarranty < 6) {
				warranty = iwarranty + " năm";
			} else {
				warranty = iwarranty + " tháng";
			}
			// fix lai ham 
			String summary = po.getProduct_summary();
			if (summary == null && summary.equalsIgnoreCase("")) {
				summary = "Mô tả đang được cập nhât";
			}

			String specification = po.getProduct_specification();
			if (specification == null && specification.equalsIgnoreCase("")) {
				specification = "Nội dung đang được cập nhât";
			}

			//hungcuong - load product rate
			int productRate = pc.getProductRateAVG(id);
			session.setAttribute("productRate", productRate);
			ArrayList<UserRateObject> alComments = pc.getProductRating(id);

			String productComment = pc.getUserComment(alComments);
			int productRateCount = alComments.size();
			session.setAttribute("productComment", productComment);
			session.setAttribute("productRateCount", productRateCount);

			//product detail
			session.setAttribute("productDetailImg", po.getProduct_image());
			session.setAttribute("productDetailName", po.getProduct_name());
			session.setAttribute("productDetailPrefix", po.getProduct_prefix());
			session.setAttribute("productDetailPrice", po.getProduct_origin_price());
			session.setAttribute("productDetailWarranty", warranty);
			session.setAttribute("productDetailSummary", summary);
			session.setAttribute("productDetailContent", specification);
			session.setAttribute("productDetailQuantity", po.getProduct_quantity());
		}
	}
	//Khai bảo object
	ProductObject similar1 = new ProductObject();
	ProductObject similar2 = new ProductObject();
	ProductObject similar3 = new ProductObject();
	ProductObject similar4 = new ProductObject();
	ProductObject similar = new ProductObject();
	CategoryObject similarc = new CategoryObject();
	//Khởi tạo điểu kiện
	similar1.setProduct_isnew(true);
	similar2.setProduct_isliquidation(true);
	similar3.setProduct_isselling(true);
	similar4.setProduct_promotion("km");
	//Khởi tạo cấu trúc
	String viewProductForNew = pc.viewProducts(similar1, (byte) 6);
	String viewProductForLiquidation = pc.viewProducts(similar2, (byte) 6);
	String viewProductForSelling = pc.viewProducts(similar3, (byte) 6);
	String viewProductPromotion = pc.viewProducts(similar4, (byte) 6);
	String viewProductForCategory = pc.viewProductsForCategory(similar);
	String viewCategorySearch = cc.slcCategoryForSearch(similarc);
	String viewCategory = cc.viewCategory(similarc);
	//Dua cau truc vao phien lam viec
	session.setAttribute("viewProductForNew", viewProductForNew);
	session.setAttribute("viewProductForLiquidation", viewProductForLiquidation);
	session.setAttribute("viewProductForSelling", viewProductForSelling);
	session.setAttribute("viewProductPromotion", viewProductPromotion);
	session.setAttribute("viewProductForCategory", viewProductForCategory);
	session.setAttribute("viewCategorySearch", viewCategorySearch);
	session.setAttribute("viewCategory", viewCategory);
	//hungcuong - collaboration filter
	String user_id_now = (String) request.getSession().getAttribute("user_id_now");
	String viewProductForReferences = (String) request.getSession().getAttribute("viewProductForReferences");

	ArrayList<ProductObject> listProductReferences = new ArrayList<ProductObject>();
	
	if (user_id_now != null) {
		listProductReferences = pc.getReferencesProduct(user_id_now);
	}
	
	//Neu khong lay duoc danh sach san pham goi y bang thuat toan loc cong tac -> lay danh sach san pham vi du
	if (listProductReferences.size() == 0) {
		listProductReferences = pc.getProductRattingSample();
	}
	// loc bo san pham hien tai
	for (int i = 0; i < listProductReferences.size(); i++) {
		if (listProductReferences.get(i).getProduct_id() == id) {
			listProductReferences.remove(i);
		}
	}
	String viewProductReferences = pc.viewProducts2(listProductReferences);
	request.getSession().setAttribute("viewProductForReferences", viewProductReferences);

    } catch (java.lang.Throwable t) {
      if (!(t instanceof javax.servlet.jsp.SkipPageException)){
        out = _jspx_out;
        if (out != null && out.getBufferSize() != 0)
          try {
            if (response.isCommitted()) {
              out.flush();
            } else {
              out.clearBuffer();
            }
          } catch (java.io.IOException e) {}
        if (_jspx_page_context != null) _jspx_page_context.handlePageException(t);
        else throw new ServletException(t);
      }
    } finally {
      _jspxFactory.releasePageContext(_jspx_page_context);
    }
  }
}
