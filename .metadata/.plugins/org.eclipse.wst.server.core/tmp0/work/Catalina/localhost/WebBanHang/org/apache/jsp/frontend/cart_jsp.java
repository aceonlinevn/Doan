/*
 * Generated by the Jasper component of Apache Tomcat
 * Version: Apache Tomcat/8.0.41
 * Generated at: 2017-05-06 23:16:39 UTC
 * Note: The last modified time of this file was set to
 *       the last modified time of the source file after
 *       generation to assist with modification tracking.
 */
package org.apache.jsp.frontend;

import javax.servlet.*;
import javax.servlet.http.*;
import javax.servlet.jsp.*;
import com.gui.product.ProductControl;
import com.object.ProductObject;
import com.library.Utilities;
import com.*;
import com.object.*;
import com.gui.product.*;

public final class cart_jsp extends org.apache.jasper.runtime.HttpJspBase
    implements org.apache.jasper.runtime.JspSourceDependent,
                 org.apache.jasper.runtime.JspSourceImports {

  private static final javax.servlet.jsp.JspFactory _jspxFactory =
          javax.servlet.jsp.JspFactory.getDefaultFactory();

  private static java.util.Map<java.lang.String,java.lang.Long> _jspx_dependants;

  private static final java.util.Set<java.lang.String> _jspx_imports_packages;

  private static final java.util.Set<java.lang.String> _jspx_imports_classes;

  static {
    _jspx_imports_packages = new java.util.HashSet<>();
    _jspx_imports_packages.add("com");
    _jspx_imports_packages.add("javax.servlet");
    _jspx_imports_packages.add("javax.servlet.http");
    _jspx_imports_packages.add("com.gui.product");
    _jspx_imports_packages.add("javax.servlet.jsp");
    _jspx_imports_packages.add("com.object");
    _jspx_imports_classes = new java.util.HashSet<>();
    _jspx_imports_classes.add("com.library.Utilities");
    _jspx_imports_classes.add("com.gui.product.ProductControl");
    _jspx_imports_classes.add("com.object.ProductObject");
  }

  private volatile javax.el.ExpressionFactory _el_expressionfactory;
  private volatile org.apache.tomcat.InstanceManager _jsp_instancemanager;

  public java.util.Map<java.lang.String,java.lang.Long> getDependants() {
    return _jspx_dependants;
  }

  public java.util.Set<java.lang.String> getPackageImports() {
    return _jspx_imports_packages;
  }

  public java.util.Set<java.lang.String> getClassImports() {
    return _jspx_imports_classes;
  }

  public javax.el.ExpressionFactory _jsp_getExpressionFactory() {
    if (_el_expressionfactory == null) {
      synchronized (this) {
        if (_el_expressionfactory == null) {
          _el_expressionfactory = _jspxFactory.getJspApplicationContext(getServletConfig().getServletContext()).getExpressionFactory();
        }
      }
    }
    return _el_expressionfactory;
  }

  public org.apache.tomcat.InstanceManager _jsp_getInstanceManager() {
    if (_jsp_instancemanager == null) {
      synchronized (this) {
        if (_jsp_instancemanager == null) {
          _jsp_instancemanager = org.apache.jasper.runtime.InstanceManagerFactory.getInstanceManager(getServletConfig());
        }
      }
    }
    return _jsp_instancemanager;
  }

  public void _jspInit() {
  }

  public void _jspDestroy() {
  }

  public void _jspService(final javax.servlet.http.HttpServletRequest request, final javax.servlet.http.HttpServletResponse response)
        throws java.io.IOException, javax.servlet.ServletException {

final java.lang.String _jspx_method = request.getMethod();
if (!"GET".equals(_jspx_method) && !"POST".equals(_jspx_method) && !"HEAD".equals(_jspx_method) && !javax.servlet.DispatcherType.ERROR.equals(request.getDispatcherType())) {
response.sendError(HttpServletResponse.SC_METHOD_NOT_ALLOWED, "JSPs only permit GET POST or HEAD");
return;
}

    final javax.servlet.jsp.PageContext pageContext;
    javax.servlet.http.HttpSession session = null;
    final javax.servlet.ServletContext application;
    final javax.servlet.ServletConfig config;
    javax.servlet.jsp.JspWriter out = null;
    final java.lang.Object page = this;
    javax.servlet.jsp.JspWriter _jspx_out = null;
    javax.servlet.jsp.PageContext _jspx_page_context = null;


    try {
      response.setContentType("text/html; charset=UTF-8");
      pageContext = _jspxFactory.getPageContext(this, request, response,
      			null, true, 8192, true);
      _jspx_page_context = pageContext;
      application = pageContext.getServletContext();
      config = pageContext.getServletConfig();
      session = pageContext.getSession();
      out = pageContext.getOut();
      _jspx_out = out;

      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("<ol class=\"breadcrumb\">\r\n");
      out.write("  <li><a href=\"/WebBanHang\"><i class=\"fa fa-home\" aria-hidden=\"true\"></i> Trang chủ</a></li>\r\n");
      out.write("  <li class=\"active\">Giỏ hàng của bạn</li>\r\n");
      out.write("</ol>\r\n");
      out.write("<div id=\"tp-cart\">\r\n");
      out.write("     <i class=\"bg icon_large_cart\"></i>\r\n");
      out.write("     <h1>Chi tiết giỏ hàng</h1>\r\n");
      out.write("     <p>Để xóa sản phẩm khỏi giỏ hàng, bấm <i class=\"fa fa-trash-o\" aria-hidden=\"true\"></i>, để mua thêm bấm <b>\"Mua thêm sản phẩm khác\"</b>.\r\n");
      out.write("       Để sang bước đặt hàng tiếp theo, bấm <b>\"Tiếp tục\"</b></p>\r\n");
      out.write("</div>\r\n");
      out.write("\t");

	Cookie[] listCookie = request.getCookies();
	String name = "";
	if(listCookie != null){
		for (int i = 0; i < listCookie.length; i++){
          if(listCookie[i].getName().equalsIgnoreCase("shopping_cart_store")){
        	  name = listCookie[i].getValue();
           }
        }
      }
	String[] items = Utilities.decodeString(name+"==").split(",");
	ConnectionPool cp = (ConnectionPool) application.getAttribute("cpool");
	ProductControl pc = new ProductControl(cp);
	if (cp == null) {
		application.setAttribute("cpool", pc.getConnectionPool());
	}
	
      out.write("\r\n");
      out.write("\t<div class=\"content-cart\">\r\n");
      out.write("\t<form name=\"frmCartDetail\" method=\"post\" onsubmit=\"return check_field()\">\r\n");
      out.write("\t\t<table class=\"table table-striped table-bordered\">\r\n");
      out.write("\t\t\t<thead>\r\n");
      out.write("\t\t\t\t<tr>\r\n");
      out.write("\t\t\t\t\t<th>STT</th>\r\n");
      out.write("\t\t\t\t\t<th colspan=\"2\">TÊN SẢN PHẨM</th>\r\n");
      out.write("\t\t\t\t\t<th>GIÁ</th>\r\n");
      out.write("\t\t\t\t\t<th>SỐ LƯỢNG</th>\r\n");
      out.write("\t\t\t\t\t<th>TỔNG</th>\r\n");
      out.write("\t\t\t\t\t<th>XÓA</th>\r\n");
      out.write("\t\t\t\t</tr>\r\n");
      out.write("\t\t\t</thead>\r\n");
      out.write("\t\t\t<tbody>\r\n");
      out.write("\t\t\t");

			String carts =  ",";
			int total = 0;
			for(int i=1;i<items.length;i++){						
				String[] item = items[i].split("-");
				carts += item[0]+"-"+item[1]+",";
				ProductObject po = pc.getProductObject(Integer.parseInt(item[1]));
				if(po != null){
					out.println("<tr>");
					out.println("<td>"+(i)+"</td>");
					out.println("<td><img src=\""+po.getProduct_image()+"\" width=\"40\" height=\"30\" /></td>");
					out.println("<td>"+po.getProduct_name()+"</td>");
					out.println("<td><span id=\"sell_price_pro_"+item[1]+"\">"+Utilities.convertMoney(Integer.parseInt(item[3]))+"</span> VND</td>");
					out.println("<td><input type=\"number\" name=\"quantity_pro_"+item[1]+"\" id=\"quantity_pro_"+item[1]+"\" value=\""+item[2]+"\" onchange=\"updatePrice('"+item[0]+"','"+item[1]+"',this.value)\" size=\"5\"></td>");
					out.println("<td><b><span id=\"price_pro_"+item[1]+"\">"+Utilities.convertMoney(Integer.parseInt(item[3]) * Integer.parseInt(item[2]))+"</span> VND</b></td>");
					out.println("<td><a href=\"javascript:deleteShoppingCartItem('"+item[0]+"','"+item[1]+"','"+item[2]+"','"+item[3]+"')\"><i class=\"fa fa-trash-o\" aria-hidden=\"true\"></i></a></td>");
					out.println("</tr>");
					total += (Integer.parseInt(item[3]) * Integer.parseInt(item[2]));
				}else{
					out.println("lỗi");
				}
			}
			out.println("<input type=\"hidden\" name=\"send_order\" value=\"yes\">");
			out.println("<input type=\"hidden\" name=\"item_update_quantity\" id=\"item_update_quantity\" value=\""+carts+"\">");
			out.println("<input type=\"hidden\" name=\"update_quantity\" value=\"yes\">");
			out.println("<input type=\"hidden\" name=\"total_cart_value\" id=\"total_cart_value\">");
			
      out.write("\r\n");
      out.write("\t\t\t<tr>\r\n");
      out.write("\t\t\t\t<td colspan=\"3\"></td>\r\n");
      out.write("\t\t\t\t<td colspan=\"4\" align=\"right\">\r\n");
      out.write("\t\t\t\t\t<b>Tổng tiền:</b>\r\n");
      out.write("      \t\t\t\t\t<b style=\"color:red; font-size:18px;\"><span class=\"sub1\" id=\"total_value\" style=\"color: red; font-weight: bold;\">");
 out.println(Utilities.convertMoney(total)); 
      out.write("</span> VND</b><br>\r\n");
      out.write("      \t\t\t\t\t<b>Chưa bao gồm phí vận chuyển</b>\r\n");
      out.write("      \t\t\t\t</td>\r\n");
      out.write("\t\t\t</tr>\r\n");
      out.write("\t\t\t</tbody>\r\n");
      out.write("\t\t</table>\r\n");
      out.write("\t\t<div class=\"bt-cart pull-right\">\r\n");
      out.write("\t\t\t<a href=\"/WebBanHang/\" class=\"btn btn-primary\">Mua thêm sản phẩm khác</a>\r\n");
      out.write("\t\t\t<a href=\"/WebBanHang/frontend/page.jsp?paction=checkout\"  class=\"btn btn-danger\">Tiếp tục</a>\r\n");
      out.write("\t\t</div>\r\n");
      out.write("\t\t</form>\r\n");
      out.write("\t</div>");
    } catch (java.lang.Throwable t) {
      if (!(t instanceof javax.servlet.jsp.SkipPageException)){
        out = _jspx_out;
        if (out != null && out.getBufferSize() != 0)
          try {
            if (response.isCommitted()) {
              out.flush();
            } else {
              out.clearBuffer();
            }
          } catch (java.io.IOException e) {}
        if (_jspx_page_context != null) _jspx_page_context.handlePageException(t);
        else throw new ServletException(t);
      }
    } finally {
      _jspxFactory.releasePageContext(_jspx_page_context);
    }
  }
}
