/*
 * Generated by the Jasper component of Apache Tomcat
 * Version: Apache Tomcat/8.0.41
 * Generated at: 2017-05-06 16:25:58 UTC
 * Note: The last modified time of this file was set to
 *       the last modified time of the source file after
 *       generation to assist with modification tracking.
 */
package org.apache.jsp.frontend;

import javax.servlet.*;
import javax.servlet.http.*;
import javax.servlet.jsp.*;
import com.gui.product.ProductControl;
import com.object.ProductObject;
import com.library.Utilities;
import com.*;
import com.object.*;
import com.gui.product.*;

public final class page_jsp extends org.apache.jasper.runtime.HttpJspBase
    implements org.apache.jasper.runtime.JspSourceDependent,
                 org.apache.jasper.runtime.JspSourceImports {

  private static final javax.servlet.jsp.JspFactory _jspxFactory =
          javax.servlet.jsp.JspFactory.getDefaultFactory();

  private static java.util.Map<java.lang.String,java.lang.Long> _jspx_dependants;

  private static final java.util.Set<java.lang.String> _jspx_imports_packages;

  private static final java.util.Set<java.lang.String> _jspx_imports_classes;

  static {
    _jspx_imports_packages = new java.util.HashSet<>();
    _jspx_imports_packages.add("com");
    _jspx_imports_packages.add("javax.servlet");
    _jspx_imports_packages.add("javax.servlet.http");
    _jspx_imports_packages.add("com.gui.product");
    _jspx_imports_packages.add("javax.servlet.jsp");
    _jspx_imports_packages.add("com.object");
    _jspx_imports_classes = new java.util.HashSet<>();
    _jspx_imports_classes.add("com.library.Utilities");
    _jspx_imports_classes.add("com.gui.product.ProductControl");
    _jspx_imports_classes.add("com.object.ProductObject");
  }

  private volatile javax.el.ExpressionFactory _el_expressionfactory;
  private volatile org.apache.tomcat.InstanceManager _jsp_instancemanager;

  public java.util.Map<java.lang.String,java.lang.Long> getDependants() {
    return _jspx_dependants;
  }

  public java.util.Set<java.lang.String> getPackageImports() {
    return _jspx_imports_packages;
  }

  public java.util.Set<java.lang.String> getClassImports() {
    return _jspx_imports_classes;
  }

  public javax.el.ExpressionFactory _jsp_getExpressionFactory() {
    if (_el_expressionfactory == null) {
      synchronized (this) {
        if (_el_expressionfactory == null) {
          _el_expressionfactory = _jspxFactory.getJspApplicationContext(getServletConfig().getServletContext()).getExpressionFactory();
        }
      }
    }
    return _el_expressionfactory;
  }

  public org.apache.tomcat.InstanceManager _jsp_getInstanceManager() {
    if (_jsp_instancemanager == null) {
      synchronized (this) {
        if (_jsp_instancemanager == null) {
          _jsp_instancemanager = org.apache.jasper.runtime.InstanceManagerFactory.getInstanceManager(getServletConfig());
        }
      }
    }
    return _jsp_instancemanager;
  }

  public void _jspInit() {
  }

  public void _jspDestroy() {
  }

  public void _jspService(final javax.servlet.http.HttpServletRequest request, final javax.servlet.http.HttpServletResponse response)
        throws java.io.IOException, javax.servlet.ServletException {

final java.lang.String _jspx_method = request.getMethod();
if (!"GET".equals(_jspx_method) && !"POST".equals(_jspx_method) && !"HEAD".equals(_jspx_method) && !javax.servlet.DispatcherType.ERROR.equals(request.getDispatcherType())) {
response.sendError(HttpServletResponse.SC_METHOD_NOT_ALLOWED, "JSPs only permit GET POST or HEAD");
return;
}

    final javax.servlet.jsp.PageContext pageContext;
    javax.servlet.http.HttpSession session = null;
    final javax.servlet.ServletContext application;
    final javax.servlet.ServletConfig config;
    javax.servlet.jsp.JspWriter out = null;
    final java.lang.Object page = this;
    javax.servlet.jsp.JspWriter _jspx_out = null;
    javax.servlet.jsp.PageContext _jspx_page_context = null;


    try {
      response.setContentType("text/html; charset=UTF-8");
      pageContext = _jspxFactory.getPageContext(this, request, response,
      			null, true, 8192, true);
      _jspx_page_context = pageContext;
      application = pageContext.getServletContext();
      config = pageContext.getServletConfig();
      session = pageContext.getSession();
      out = pageContext.getOut();
      _jspx_out = out;

      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      org.apache.jasper.runtime.JspRuntimeLibrary.include(request, response, "header.jsp", out, true);
      out.write("\r\n");
      out.write("<div class=\"content\">\r\n");
      out.write("\t<div class=\"wrapper\">\r\n");
      out.write("\t\t<div class=\"sub-content\">\r\n");
      out.write("\t\t\t<div class=\"sidebar side-bar-auto\">\r\n");
      out.write("\t\t\t\t");

				String viewCategory = (String) session.getAttribute("viewCategory");
				if(viewCategory != null){
					out.print(viewCategory);
				}
				
      out.write("\r\n");
      out.write("\t\t\t</div>\r\n");
      out.write("\t\t\t<!-- end sidebar-->\r\n");
      out.write("\t\t\t<div class=\"aside\">\r\n");
      out.write("\t\t\t\t<div class=\"tp-aside\">\r\n");
      out.write("\t\t\t\t\t");
      org.apache.jasper.runtime.JspRuntimeLibrary.include(request, response, "search.jsp", out, true);
      out.write("\r\n");
      out.write("\t\t\t\t\t<div class=\"nav\">\r\n");
      out.write("\t\t\t\t\t\t<a href=\"tel:19009068\" class=\"support-number\">Hỗ trợ trực\r\n");
      out.write("\t\t\t\t\t\t\ttuyến: 1900.9068</a> <a href=\"#\" class=\"news-tp-aside\">Tin tức</a> <a\r\n");
      out.write("\t\t\t\t\t\t\thref=\"#\" class=\"contact-tp-aside\">Liên hệ - hợp tác</a>\r\n");
      out.write("\t\t\t\t\t</div>\r\n");
      out.write("\t\t\t\t</div>\r\n");
      out.write("\t\t\t\t<!-- end tp-aside-->\r\n");
      out.write("\t\t\t</div>\r\n");
      out.write("\t\t\t<!-- end aside-->\r\n");
      out.write("\t\t</div>\r\n");
      out.write("\t\t<!-- end sub-content-->\r\n");
      out.write("\t\t<div class=\"clr\"></div>\r\n");
      out.write("\t\t<div class=\"main-content text-left\">\r\n");
      out.write("\t\t\t");

				String paction = request.getParameter("paction");
				if(paction != null){
					switch(paction){
						case "checkout" :
							 
      org.apache.jasper.runtime.JspRuntimeLibrary.include(request, response, "checkout.jsp", out, true);
 
						break;
						case "cart" :
							 
      org.apache.jasper.runtime.JspRuntimeLibrary.include(request, response, "cart.jsp", out, true);
 
						break;
						case "detail" :
							 
      org.apache.jasper.runtime.JspRuntimeLibrary.include(request, response, "detail.jsp", out, true);
 
						break;
						case "category" :
							 
      org.apache.jasper.runtime.JspRuntimeLibrary.include(request, response, "category.jsp", out, true);
 
						break;
						case "info-account" :
							 
      org.apache.jasper.runtime.JspRuntimeLibrary.include(request, response, "info-account.jsp", out, true);
 
						break;
						case "register-account" :
							 
      org.apache.jasper.runtime.JspRuntimeLibrary.include(request, response, "register-account.jsp", out, true);
 
						break;
					}
				}
			
      out.write("\r\n");
      out.write("\t\t</div>\r\n");
      out.write("\t\t<!-- end main-content-->\r\n");
      out.write("\t</div>\r\n");
      out.write("\t");
      org.apache.jasper.runtime.JspRuntimeLibrary.include(request, response, "footer.jsp", out, true);
    } catch (java.lang.Throwable t) {
      if (!(t instanceof javax.servlet.jsp.SkipPageException)){
        out = _jspx_out;
        if (out != null && out.getBufferSize() != 0)
          try {
            if (response.isCommitted()) {
              out.flush();
            } else {
              out.clearBuffer();
            }
          } catch (java.io.IOException e) {}
        if (_jspx_page_context != null) _jspx_page_context.handlePageException(t);
        else throw new ServletException(t);
      }
    } finally {
      _jspxFactory.releasePageContext(_jspx_page_context);
    }
  }
}
