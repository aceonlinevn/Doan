/*
 * Generated by the Jasper component of Apache Tomcat
 * Version: Apache Tomcat/8.0.41
 * Generated at: 2017-05-06 16:30:46 UTC
 * Note: The last modified time of this file was set to
 *       the last modified time of the source file after
 *       generation to assist with modification tracking.
 */
package org.apache.jsp.frontend;

import javax.servlet.*;
import javax.servlet.http.*;
import javax.servlet.jsp.*;

public final class register_002daccount_jsp extends org.apache.jasper.runtime.HttpJspBase
    implements org.apache.jasper.runtime.JspSourceDependent,
                 org.apache.jasper.runtime.JspSourceImports {

  private static final javax.servlet.jsp.JspFactory _jspxFactory =
          javax.servlet.jsp.JspFactory.getDefaultFactory();

  private static java.util.Map<java.lang.String,java.lang.Long> _jspx_dependants;

  private static final java.util.Set<java.lang.String> _jspx_imports_packages;

  private static final java.util.Set<java.lang.String> _jspx_imports_classes;

  static {
    _jspx_imports_packages = new java.util.HashSet<>();
    _jspx_imports_packages.add("javax.servlet");
    _jspx_imports_packages.add("javax.servlet.http");
    _jspx_imports_packages.add("javax.servlet.jsp");
    _jspx_imports_classes = null;
  }

  private volatile javax.el.ExpressionFactory _el_expressionfactory;
  private volatile org.apache.tomcat.InstanceManager _jsp_instancemanager;

  public java.util.Map<java.lang.String,java.lang.Long> getDependants() {
    return _jspx_dependants;
  }

  public java.util.Set<java.lang.String> getPackageImports() {
    return _jspx_imports_packages;
  }

  public java.util.Set<java.lang.String> getClassImports() {
    return _jspx_imports_classes;
  }

  public javax.el.ExpressionFactory _jsp_getExpressionFactory() {
    if (_el_expressionfactory == null) {
      synchronized (this) {
        if (_el_expressionfactory == null) {
          _el_expressionfactory = _jspxFactory.getJspApplicationContext(getServletConfig().getServletContext()).getExpressionFactory();
        }
      }
    }
    return _el_expressionfactory;
  }

  public org.apache.tomcat.InstanceManager _jsp_getInstanceManager() {
    if (_jsp_instancemanager == null) {
      synchronized (this) {
        if (_jsp_instancemanager == null) {
          _jsp_instancemanager = org.apache.jasper.runtime.InstanceManagerFactory.getInstanceManager(getServletConfig());
        }
      }
    }
    return _jsp_instancemanager;
  }

  public void _jspInit() {
  }

  public void _jspDestroy() {
  }

  public void _jspService(final javax.servlet.http.HttpServletRequest request, final javax.servlet.http.HttpServletResponse response)
        throws java.io.IOException, javax.servlet.ServletException {

final java.lang.String _jspx_method = request.getMethod();
if (!"GET".equals(_jspx_method) && !"POST".equals(_jspx_method) && !"HEAD".equals(_jspx_method) && !javax.servlet.DispatcherType.ERROR.equals(request.getDispatcherType())) {
response.sendError(HttpServletResponse.SC_METHOD_NOT_ALLOWED, "JSPs only permit GET POST or HEAD");
return;
}

    final javax.servlet.jsp.PageContext pageContext;
    javax.servlet.http.HttpSession session = null;
    final javax.servlet.ServletContext application;
    final javax.servlet.ServletConfig config;
    javax.servlet.jsp.JspWriter out = null;
    final java.lang.Object page = this;
    javax.servlet.jsp.JspWriter _jspx_out = null;
    javax.servlet.jsp.PageContext _jspx_page_context = null;


    try {
      response.setContentType("text/html; charset=UTF-8");
      pageContext = _jspxFactory.getPageContext(this, request, response,
      			null, true, 8192, true);
      _jspx_page_context = pageContext;
      application = pageContext.getServletContext();
      config = pageContext.getServletConfig();
      session = pageContext.getSession();
      out = pageContext.getOut();
      _jspx_out = out;

      out.write("\r\n");
      out.write("<form name=\"registryForm\" id=\"registryForm\" method=\"POST\" action=\"/WebBanHang/UserRegister\" onsubmit=\"\">\r\n");
      out.write("\t<div class=\"col-sm-12\">\r\n");
      out.write("\t\t<div class=\"title-custom\">Đăng ký tài khoản</div>\r\n");
      out.write("\t\t<div class=\"col-sm-4\">\r\n");
      out.write("\t\t\t<div class=\"form-group\">\r\n");
      out.write("\t\t\t\t<label for=\"txtCustomerName\">Họ tên </label> <input type=\"text\"\r\n");
      out.write("\t\t\t\t\tid=\"txtCustomerName\" name=\"txtCustomerName\" required=\"required\"\r\n");
      out.write("\t\t\t\t\tclass=\"form-control\">\r\n");
      out.write("\t\t\t</div>\r\n");
      out.write("\t\t\t<div class=\"form-group\">\r\n");
      out.write("\t\t\t\t<label for=\"txtCustomerEmail\">Địa chỉ email</label> <input\r\n");
      out.write("\t\t\t\t\ttype=\"text\" id=\"txtCustomerEmail\" name=\"txtCustomerEmail\"\r\n");
      out.write("\t\t\t\t\trequired=\"required\" class=\"form-control\">\r\n");
      out.write("\t\t\t</div>\r\n");
      out.write("\t\t\t<div class=\"form-group\">\r\n");
      out.write("\t\t\t\t<label for=\"txtCustomerPhoneNumber\">Điện thoại</label> <input\r\n");
      out.write("\t\t\t\t\ttype=\"text\" id=\"txtCustomerPhoneNumber\"\r\n");
      out.write("\t\t\t\t\tname=\"txtCustomerPhoneNumber\" required=\"required\"\r\n");
      out.write("\t\t\t\t\tclass=\"form-control\">\r\n");
      out.write("\t\t\t</div>\r\n");
      out.write("\t\t\t<div class=\"form-group\">\r\n");
      out.write("\t\t\t\t<label for=\"rdoGender\">Giới tính </label> &nbsp;&nbsp;&nbsp;<input\r\n");
      out.write("\t\t\t\t\ttype=\"radio\" id=\"rdoGenderMale\" name=\"rdoGender\" value=\"1\" checked=\"checked\">\r\n");
      out.write("\t\t\t\t<label for=\"rdoGenderMale\">Nam</label> &nbsp;&nbsp;&nbsp;\r\n");
      out.write("\t\t\t\t<input type=\"radio\" id=\"rdoGenderFemale\" name=\"rdoGender\" value=\"2\"><label\r\n");
      out.write("\t\t\t\t\tfor=\"rdoGenderFemale\">Nữ</label>\r\n");
      out.write("\t\t\t</div>\r\n");
      out.write("\t\t\t<div class=\"form-group\">\r\n");
      out.write("\t\t\t\t<label for=\"txtCustomerBirthdate\">Ngày sinh </label>\r\n");
      out.write("\t\t\t\t<input type=\"date\" id=\"txtCustomerBirthdate\" name=\"txtCustomerBirthdate\"\r\n");
      out.write("\t\t\t\t\tclass=\"form-control\" required=\"required\"></input>\r\n");
      out.write("\t\t\t</div>\r\n");
      out.write("\t\t\t<div class=\"form-group\">\r\n");
      out.write("\t\t\t\t<label for=\"txtCustomerAdress\">Địa chỉ</label>\r\n");
      out.write("\t\t\t\t<textarea id=\"txtCustomerAdress\" name=\"txtCustomerAdress\"\r\n");
      out.write("\t\t\t\t\tclass=\"form-control\" required=\"required\"></textarea>\r\n");
      out.write("\t\t\t</div>\r\n");
      out.write("\t\t\t<div class=\"form-group\">\r\n");
      out.write("\t\t\t\t<label for=\"txtCustomerNote\">Ghi chú</label>\r\n");
      out.write("\t\t\t\t<textarea id=\"txtCustomerNote\" name=\"txtCustomerNote\"\r\n");
      out.write("\t\t\t\t\tclass=\"form-control\"></textarea>\r\n");
      out.write("\t\t\t</div>\r\n");
      out.write("\t\t\t<div class=\"form-group\">\r\n");
      out.write("\t\t\t\t<label for=\"txtCustomerNote\">Mã captcha</label>\r\n");
      out.write("\t\t\t\t<div id=\"captchaImg\"><img src=\"/WebBanHang/captcha-image.jpg\"></div>\r\n");
      out.write("\t\t\t</div>\r\n");
      out.write("\t\t\t<div class=\"form-group\">\r\n");
      out.write("\t\t\t\t<label for=\"txtReCaptcha\">Xác nhận mã captcha</label>\r\n");
      out.write("\t\t\t\t<input type=\"text\" id=\"txtReCaptcha\" name=\"txtReCaptcha\"\r\n");
      out.write("\t\t\t\t\tclass=\"form-control\" required=\"required\"></input>\r\n");
      out.write("\t\t\t</div>\r\n");
      out.write("\t\t\t<button type=\"submit\" class=\"btn btn-danger\">Đăng ký</button>\r\n");
      out.write("\t\t\t<a class=\"btn btn-primary\" data-toggle=\"modal\" data-target=\"#mdLogin\">Đăng Nhập</a>\r\n");
      out.write("\t\t</div>\r\n");
      out.write("\t</div>\r\n");
      out.write("</form>");
    } catch (java.lang.Throwable t) {
      if (!(t instanceof javax.servlet.jsp.SkipPageException)){
        out = _jspx_out;
        if (out != null && out.getBufferSize() != 0)
          try {
            if (response.isCommitted()) {
              out.flush();
            } else {
              out.clearBuffer();
            }
          } catch (java.io.IOException e) {}
        if (_jspx_page_context != null) _jspx_page_context.handlePageException(t);
        else throw new ServletException(t);
      }
    } finally {
      _jspxFactory.releasePageContext(_jspx_page_context);
    }
  }
}
