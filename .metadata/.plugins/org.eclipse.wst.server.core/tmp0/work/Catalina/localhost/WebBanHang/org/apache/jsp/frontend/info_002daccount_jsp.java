/*
 * Generated by the Jasper component of Apache Tomcat
 * Version: Apache Tomcat/8.0.41
 * Generated at: 2017-05-06 16:43:33 UTC
 * Note: The last modified time of this file was set to
 *       the last modified time of the source file after
 *       generation to assist with modification tracking.
 */
package org.apache.jsp.frontend;

import javax.servlet.*;
import javax.servlet.http.*;
import javax.servlet.jsp.*;
import com.gui.product.ProductControl;
import com.object.ProductObject;
import com.library.Utilities;
import com.*;
import com.object.*;
import com.gui.product.*;

public final class info_002daccount_jsp extends org.apache.jasper.runtime.HttpJspBase
    implements org.apache.jasper.runtime.JspSourceDependent,
                 org.apache.jasper.runtime.JspSourceImports {

  private static final javax.servlet.jsp.JspFactory _jspxFactory =
          javax.servlet.jsp.JspFactory.getDefaultFactory();

  private static java.util.Map<java.lang.String,java.lang.Long> _jspx_dependants;

  private static final java.util.Set<java.lang.String> _jspx_imports_packages;

  private static final java.util.Set<java.lang.String> _jspx_imports_classes;

  static {
    _jspx_imports_packages = new java.util.HashSet<>();
    _jspx_imports_packages.add("com");
    _jspx_imports_packages.add("javax.servlet");
    _jspx_imports_packages.add("javax.servlet.http");
    _jspx_imports_packages.add("com.gui.product");
    _jspx_imports_packages.add("javax.servlet.jsp");
    _jspx_imports_packages.add("com.object");
    _jspx_imports_classes = new java.util.HashSet<>();
    _jspx_imports_classes.add("com.library.Utilities");
    _jspx_imports_classes.add("com.gui.product.ProductControl");
    _jspx_imports_classes.add("com.object.ProductObject");
  }

  private volatile javax.el.ExpressionFactory _el_expressionfactory;
  private volatile org.apache.tomcat.InstanceManager _jsp_instancemanager;

  public java.util.Map<java.lang.String,java.lang.Long> getDependants() {
    return _jspx_dependants;
  }

  public java.util.Set<java.lang.String> getPackageImports() {
    return _jspx_imports_packages;
  }

  public java.util.Set<java.lang.String> getClassImports() {
    return _jspx_imports_classes;
  }

  public javax.el.ExpressionFactory _jsp_getExpressionFactory() {
    if (_el_expressionfactory == null) {
      synchronized (this) {
        if (_el_expressionfactory == null) {
          _el_expressionfactory = _jspxFactory.getJspApplicationContext(getServletConfig().getServletContext()).getExpressionFactory();
        }
      }
    }
    return _el_expressionfactory;
  }

  public org.apache.tomcat.InstanceManager _jsp_getInstanceManager() {
    if (_jsp_instancemanager == null) {
      synchronized (this) {
        if (_jsp_instancemanager == null) {
          _jsp_instancemanager = org.apache.jasper.runtime.InstanceManagerFactory.getInstanceManager(getServletConfig());
        }
      }
    }
    return _jsp_instancemanager;
  }

  public void _jspInit() {
  }

  public void _jspDestroy() {
  }

  public void _jspService(final javax.servlet.http.HttpServletRequest request, final javax.servlet.http.HttpServletResponse response)
        throws java.io.IOException, javax.servlet.ServletException {

final java.lang.String _jspx_method = request.getMethod();
if (!"GET".equals(_jspx_method) && !"POST".equals(_jspx_method) && !"HEAD".equals(_jspx_method) && !javax.servlet.DispatcherType.ERROR.equals(request.getDispatcherType())) {
response.sendError(HttpServletResponse.SC_METHOD_NOT_ALLOWED, "JSPs only permit GET POST or HEAD");
return;
}

    final javax.servlet.jsp.PageContext pageContext;
    javax.servlet.http.HttpSession session = null;
    final javax.servlet.ServletContext application;
    final javax.servlet.ServletConfig config;
    javax.servlet.jsp.JspWriter out = null;
    final java.lang.Object page = this;
    javax.servlet.jsp.JspWriter _jspx_out = null;
    javax.servlet.jsp.PageContext _jspx_page_context = null;


    try {
      response.setContentType("text/html; charset=UTF-8");
      pageContext = _jspxFactory.getPageContext(this, request, response,
      			null, true, 8192, true);
      _jspx_page_context = pageContext;
      application = pageContext.getServletContext();
      config = pageContext.getServletConfig();
      session = pageContext.getSession();
      out = pageContext.getOut();
      _jspx_out = out;

      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");

	UserObject userLogined = (UserObject) session.getAttribute("userLogined");
	if(userLogined == null){
		out.println("<script>window.location = '/WebBanHang';</script>");
	}

      out.write("\r\n");
      out.write("<link rel=\"stylesheet\" href=\"");
      out.print(request.getContextPath());
      out.write("/frontend/css/info-account.css\">\r\n");
      out.write("<ol class=\"breadcrumb\">\r\n");
      out.write("\t<li><a href=\"/WebBanHang\"><i class=\"fa fa-home\"\r\n");
      out.write("\t\t\taria-hidden=\"true\"></i> Trang chủ</a></li>\r\n");
      out.write("\t<li class=\"active\">Tài khoản của bạn</li>\r\n");
      out.write("</ol>\r\n");
      out.write("<div class=\"content-info-account\">\r\n");
      out.write("\t<div class=\"left-info-account\">\r\n");
      out.write("\t\t<div class=\"nav-info-account\">\r\n");
      out.write("\t\t\t<div class=\"nav-title-info\">Đơn hàng đặt mua</div>\r\n");
      out.write("\t\t\t<div class=\"nav-content-info\">\r\n");
      out.write("\t\t\t\t<a href=\"?paction=info-account&view=account-order\"><h3>Danh sách đơn hàng</h3></a>\r\n");
      out.write("\t\t\t</div>\r\n");
      out.write("\t\t\t<div class=\"nav-title-info\">Hoạt động cá nhân</div>\r\n");
      out.write("\t\t\t<div class=\"nav-content-info\">\r\n");
      out.write("\t\t\t\t<a href=\"?paction=info-account&view=account-pro-save\"><h3>Sản phẩm đang lưu</h3></a>\r\n");
      out.write("\t\t\t</div>\r\n");
      out.write("\t\t\t<div class=\"nav-title-info\">Thông tin tài khoản</div>\r\n");
      out.write("\t\t\t<div class=\"nav-content-info\">\r\n");
      out.write("\t\t\t\t<a href=\"?paction=info-account&view=account-detail\"><h3>Thông tin cá nhân</h3></a>\r\n");
      out.write("\t\t\t\t<a href=\"?paction=info-account&view=account-change-pass\"><h3>Thay đổi mật khẩu</h3></a>\r\n");
      out.write("\t\t\t</div>\r\n");
      out.write("\t\t</div>\r\n");
      out.write("\t</div>\r\n");
      out.write("\t<div class=\"right-info-account\">\r\n");
      out.write("\t\t");

			if(request.getParameter("view") != null){
				if(request.getParameter("view").equalsIgnoreCase("account-order")){ 
      out.write("\r\n");
      out.write("\t\t\t\t\t");
      org.apache.jasper.runtime.JspRuntimeLibrary.include(request, response, "account-order.jsp", out, true);
      out.write("\r\n");
      out.write("\t\t\t\t");
 }else if(request.getParameter("view").equalsIgnoreCase("account-pro-save")){ 
      out.write("\r\n");
      out.write("\t\t\t\t\t");
      org.apache.jasper.runtime.JspRuntimeLibrary.include(request, response, "account-pro-save.jsp", out, true);
      out.write("\r\n");
      out.write("\t\t\t\t\r\n");
      out.write("\t\t\t\t");
 }else if(request.getParameter("view").equalsIgnoreCase("account-detail")){ 
      out.write("\r\n");
      out.write("\t\t\t\t\t");
      org.apache.jasper.runtime.JspRuntimeLibrary.include(request, response, "account-detail.jsp", out, true);
      out.write("\r\n");
      out.write("\t\t\t\t");
 }
				else if(request.getParameter("view").equalsIgnoreCase("account-change-pass")){ 
      out.write("\r\n");
      out.write("\t\t\t\t\t");
      org.apache.jasper.runtime.JspRuntimeLibrary.include(request, response, "account-change-pass.jsp", out, true);
      out.write("\r\n");
      out.write("\t\t\t\t");
 }
			}else{ 
      out.write("\r\n");
      out.write("\t\t\t\t");
      org.apache.jasper.runtime.JspRuntimeLibrary.include(request, response, "account-order.jsp", out, true);
      out.write("\r\n");
      out.write("\t\t\t");
 }
		
      out.write("\r\n");
      out.write("\t</div>\r\n");
      out.write("</div>");
    } catch (java.lang.Throwable t) {
      if (!(t instanceof javax.servlet.jsp.SkipPageException)){
        out = _jspx_out;
        if (out != null && out.getBufferSize() != 0)
          try {
            if (response.isCommitted()) {
              out.flush();
            } else {
              out.clearBuffer();
            }
          } catch (java.io.IOException e) {}
        if (_jspx_page_context != null) _jspx_page_context.handlePageException(t);
        else throw new ServletException(t);
      }
    } finally {
      _jspxFactory.releasePageContext(_jspx_page_context);
    }
  }
}
