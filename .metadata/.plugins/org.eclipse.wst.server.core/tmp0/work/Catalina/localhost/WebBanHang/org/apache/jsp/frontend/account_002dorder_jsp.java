/*
 * Generated by the Jasper component of Apache Tomcat
 * Version: Apache Tomcat/8.0.41
 * Generated at: 2017-05-06 17:53:17 UTC
 * Note: The last modified time of this file was set to
 *       the last modified time of the source file after
 *       generation to assist with modification tracking.
 */
package org.apache.jsp.frontend;

import javax.servlet.*;
import javax.servlet.http.*;
import javax.servlet.jsp.*;
import com.ads.user.UserModel;
import com.library.Utilities;
import com.*;
import com.object.*;
import com.gui.bill.*;
import com.gui.product.*;
import java.util.*;

public final class account_002dorder_jsp extends org.apache.jasper.runtime.HttpJspBase
    implements org.apache.jasper.runtime.JspSourceDependent,
                 org.apache.jasper.runtime.JspSourceImports {

  private static final javax.servlet.jsp.JspFactory _jspxFactory =
          javax.servlet.jsp.JspFactory.getDefaultFactory();

  private static java.util.Map<java.lang.String,java.lang.Long> _jspx_dependants;

  private static final java.util.Set<java.lang.String> _jspx_imports_packages;

  private static final java.util.Set<java.lang.String> _jspx_imports_classes;

  static {
    _jspx_imports_packages = new java.util.HashSet<>();
    _jspx_imports_packages.add("com");
    _jspx_imports_packages.add("javax.servlet");
    _jspx_imports_packages.add("java.util");
    _jspx_imports_packages.add("javax.servlet.http");
    _jspx_imports_packages.add("com.gui.bill");
    _jspx_imports_packages.add("com.gui.product");
    _jspx_imports_packages.add("javax.servlet.jsp");
    _jspx_imports_packages.add("com.object");
    _jspx_imports_classes = new java.util.HashSet<>();
    _jspx_imports_classes.add("com.library.Utilities");
    _jspx_imports_classes.add("com.ads.user.UserModel");
  }

  private volatile javax.el.ExpressionFactory _el_expressionfactory;
  private volatile org.apache.tomcat.InstanceManager _jsp_instancemanager;

  public java.util.Map<java.lang.String,java.lang.Long> getDependants() {
    return _jspx_dependants;
  }

  public java.util.Set<java.lang.String> getPackageImports() {
    return _jspx_imports_packages;
  }

  public java.util.Set<java.lang.String> getClassImports() {
    return _jspx_imports_classes;
  }

  public javax.el.ExpressionFactory _jsp_getExpressionFactory() {
    if (_el_expressionfactory == null) {
      synchronized (this) {
        if (_el_expressionfactory == null) {
          _el_expressionfactory = _jspxFactory.getJspApplicationContext(getServletConfig().getServletContext()).getExpressionFactory();
        }
      }
    }
    return _el_expressionfactory;
  }

  public org.apache.tomcat.InstanceManager _jsp_getInstanceManager() {
    if (_jsp_instancemanager == null) {
      synchronized (this) {
        if (_jsp_instancemanager == null) {
          _jsp_instancemanager = org.apache.jasper.runtime.InstanceManagerFactory.getInstanceManager(getServletConfig());
        }
      }
    }
    return _jsp_instancemanager;
  }

  public void _jspInit() {
  }

  public void _jspDestroy() {
  }

  public void _jspService(final javax.servlet.http.HttpServletRequest request, final javax.servlet.http.HttpServletResponse response)
        throws java.io.IOException, javax.servlet.ServletException {

final java.lang.String _jspx_method = request.getMethod();
if (!"GET".equals(_jspx_method) && !"POST".equals(_jspx_method) && !"HEAD".equals(_jspx_method) && !javax.servlet.DispatcherType.ERROR.equals(request.getDispatcherType())) {
response.sendError(HttpServletResponse.SC_METHOD_NOT_ALLOWED, "JSPs only permit GET POST or HEAD");
return;
}

    final javax.servlet.jsp.PageContext pageContext;
    javax.servlet.http.HttpSession session = null;
    final javax.servlet.ServletContext application;
    final javax.servlet.ServletConfig config;
    javax.servlet.jsp.JspWriter out = null;
    final java.lang.Object page = this;
    javax.servlet.jsp.JspWriter _jspx_out = null;
    javax.servlet.jsp.PageContext _jspx_page_context = null;


    try {
      response.setContentType("text/html; charset=UTF-8");
      pageContext = _jspxFactory.getPageContext(this, request, response,
      			null, true, 8192, true);
      _jspx_page_context = pageContext;
      application = pageContext.getServletContext();
      config = pageContext.getServletConfig();
      session = pageContext.getSession();
      out = pageContext.getOut();
      _jspx_out = out;

      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("  \r\n");
      out.write("    ");
 
	    ConnectionPool cp = (ConnectionPool) application.getAttribute("cpool");
		BillControl bc = new BillControl(cp);
		if (cp == null) {
			application.setAttribute("cpool", bc.getConnectionPool());
		}
    	UserObject userLogined = (UserObject) session.getAttribute("userLogined");
    	if(userLogined != null){
    		ArrayList<BillObject> items = bc.getBillForCusObject(userLogined.getUserId());
    		
    		if(items.size()>0){
    			String status = "";
    
      out.write("\r\n");
      out.write("    \r\n");
      out.write("\t<table class=\"table table-bordered\">\r\n");
      out.write("\t\t<thead>\r\n");
      out.write("\t\t\t<tr>\r\n");
      out.write("\t\t\t\t<th rowspan=\"2\">Mã đơn hàng</th>\r\n");
      out.write("\t\t\t\t<th rowspan=\"2\">Ngày đặt hàng</th>\r\n");
      out.write("\t\t\t\t<th colspan=\"2\">Chi tiết</th>\r\n");
      out.write("\t\t\t\t<th rowspan=\"2\">Tình trạng</th>\r\n");
      out.write("\t\t\t\t<th rowspan=\"2\">Thao tác</th>\r\n");
      out.write("\t\t\t</tr>\r\n");
      out.write("\t\t\t<tr>\r\n");
      out.write("\t\t\t\t<th>Tên mặt hàng</th>\r\n");
      out.write("\t\t\t\t<th>Số lượng</th>\r\n");
      out.write("\t\t\t</tr>\r\n");
      out.write("\t\t</thead>\r\n");
      out.write("\t\t<tbody>\r\n");
      out.write("\t\t");
 for(BillObject item : items){ 
			if(item.getBill_status() == 0){
				status = "Chưa xử lý";
			}else if(item.getBill_status() == 1){
				status = "Đã xác nhận";
			}else if(item.getBill_status() == 2){
				status = "Đang giao hàng";
			}else if(item.getBill_status() == 3){
				status = "Hoàn thành";
			}
			
		
      out.write("\r\n");
      out.write("\t\t\t<tr>\r\n");
      out.write("\t\t\t\t<td>");
      out.print(item.getBill_id() );
      out.write("</td>\r\n");
      out.write("\t\t\t\t<td>");
      out.print(item.getBill_date_created() );
      out.write("</td>\r\n");
      out.write("\t\t\t\t<td colspan=\"2\">\r\n");
      out.write("\t\t\t\t\t<table class=\"tb1\">\r\n");
      out.write("\t\t\t\t\t\t");

							String[] pritems = item.getBill_product_detail().split(",");
							for(int i =1;i<pritems.length;i++){
								String[] pritem = pritems[i].split("-");
								ProductControl pc = new ProductControl(cp);
								if (cp == null) {
									application.setAttribute("cpool", pc.getConnectionPool());
								}
								ProductObject po = pc.getProductObject(Integer.parseInt(pritem[1]));
						
      out.write("\r\n");
      out.write("\t\t\t\t\t\t<tr>\r\n");
      out.write("\t\t\t\t\t\t\t<td><a href=\"");
      out.print(request.getContextPath()+"/frontend/page.jsp?paction=detail?prid="+po.getProduct_id());
      out.write("\" target=\"_blank\" title=\"");
      out.print(po.getProduct_name() );
      out.write('"');
      out.write('>');
      out.print(po.getProduct_name() );
      out.write("</a></td>\r\n");
      out.write("\t\t\t\t\t\t\t<td>");
      out.print(pritem[2] );
      out.write("</td>\r\n");
      out.write("\t\t\t\t\t\t</tr>\r\n");
      out.write("\t\t\t\t\t\t");
 } 
      out.write("\r\n");
      out.write("\t\t\t\t\t</table>\r\n");
      out.write("\t\t\t\t</td>\r\n");
      out.write("\t\t\t\t<td>");
      out.print(status );
      out.write("</td>\r\n");
      out.write("\t\t\t\t<td><a href=\"/WebBanHang/frontend/info-account.jsp?paction=detail&view=account-order&del=");
      out.print(item.getBill_id() );
      out.write("\" onclick=\"return confirm('Bạn có chắn chắn muốn hủy bỏ đơn hàng này không?')\"><i class=\"fa fa-times\" aria-hidden=\"true\"></i> Hủy bỏ</a></td>\r\n");
      out.write("\t\t\t</tr>\r\n");
      out.write("\t\t\t");
 } 
      out.write("\r\n");
      out.write("\t\t</tbody>\r\n");
      out.write("\t</table>\r\n");
      out.write("\t");
 }else{
		out.println("<b>Chưa có đơn hàng.</b>");
	}
    		}
    if(request.getParameter("del") !=null){
    	BillObject bo = new BillObject();
    	bo.setBill_id(Integer.parseInt(request.getParameter("del")));
    	if(bc.cancelBill(bo)){
    		out.println(Utilities.getMessageRedict("Hủy đơn hàng thành công.","/WebBanHang/frontend/info-account.jsp"));	
    	}else{
    		out.println(Utilities.getMessageRedict("Không hủy được đơn hàng.","/WebBanHang/frontend/info-account.jsp"));
    	}
    }
    		
    		
    } catch (java.lang.Throwable t) {
      if (!(t instanceof javax.servlet.jsp.SkipPageException)){
        out = _jspx_out;
        if (out != null && out.getBufferSize() != 0)
          try {
            if (response.isCommitted()) {
              out.flush();
            } else {
              out.clearBuffer();
            }
          } catch (java.io.IOException e) {}
        if (_jspx_page_context != null) _jspx_page_context.handlePageException(t);
        else throw new ServletException(t);
      }
    } finally {
      _jspxFactory.releasePageContext(_jspx_page_context);
    }
  }
}
